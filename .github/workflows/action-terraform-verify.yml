name: Validate terraform fmt
on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    name: terraform fmt check
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Fetch all branches
        run: |
          git remote set-branches origin '*'
          git fetch origin
          
      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"
          
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
          
      - name: Validate terraform fmt
        run: |
          EXIT_CODE=0
          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            if [[ $changed_file == *.tf ]]; then
              echo "Checking terraform fmt on ${changed_file}..."
              if ! terraform fmt -check "$changed_file"; then
                echo "::error::‚ùå Terraform formatting failed for ${changed_file}"
                EXIT_CODE=1
              fi
            fi
          done
          exit $EXIT_CODE